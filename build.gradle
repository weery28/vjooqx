import groovy.xml.MarkupBuilder
import org.jooq.util.GenerationTool

import javax.xml.bind.JAXB

buildscript {
    ext.kotlin_version = '1.2.21'

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.jooq:jooq-codegen:3.10.0'
        classpath 'org.postgresql:postgresql:42.1.4'
    }
}

group 'com.github.weery28'
version '0.0.1'

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'com.github.jitpack:gradle-simple:1.0'

    compile group: 'io.vertx', name: 'vertx-rx-java2', version: '3.5.0'
    compile 'io.vertx:vertx-mysql-postgresql-client:3.5.0'
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.8'
    compile group: 'io.vertx', name: 'vertx-rx-java2', version: '3.5.0'
    compile group: 'org.jooq', name: 'jooq', version: '3.10.3'
    compile group: 'javax.validation', name: 'validation-api', version: '1.1.0.Alpha1'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task generate {
    def writer = new StringWriter()
    def xml = new MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.10.0.xsd') {
        jdbc() {
            driver('org.postgresql.Driver')
            url('jdbc:postgresql://127.0.0.1:5432/sportvisor')
            user('admin')
            password('123456')
        }
        generator() {
            database() {
                name('org.jooq.util.postgres.PostgresDatabase')
                inputSchema('public')
                excludes("schema_version")
            }

            generate([:]) {
                relations true
                records true
                interfaces true
                validationAnnotations true
            }
            target() {
                packageName('models.generated')
                directory('src/main/java/')
            }
        }
    }

    GenerationTool.generate(
            JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
    )
}


